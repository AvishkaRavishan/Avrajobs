{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n};\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({\n      type: ACTIONS.MAKE_REQUEST\n    });\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.GET_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    const cancelToken2 = axios.CancelToken.source();\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: {\n        markdown: true,\n        page: page + 1,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n        payload: {\n          hasNextPage: res.data.length !== 0\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n  return state;\n}\n\n_s(useFetchJobs, \"bRLgDQdNj1tsVgoBhwCNrWgJPwM=\");","map":{"version":3,"sources":["E:/GitHub/Avrajobs V2/Avrajobs/src/useFetchJobs.js"],"names":["useReducer","useEffect","axios","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","dispatch","cancelToken1","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] }\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs }\n    case ACTIONS.ERROR:\n      return { ...state, loading: false, error: action.payload.error, jobs: [] }\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage }\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source()\n\n    dispatch({ type: ACTIONS.MAKE_REQUEST })\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: { markdown: true, page: page, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n    })\n\n    const cancelToken2 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: { markdown: true, page: page + 1, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } })\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n    })\n\n    return () => {\n      cancelToken1.cancel()\n      cancelToken2.cancel();\n    }\n  }, [params, page]);\n\n  return state;\n}"]},"metadata":{},"sourceType":"module"}